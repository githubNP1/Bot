package finalBot;

import java.awt.AWTException;
import java.awt.MouseInfo;
import java.awt.Point;
import java.awt.Robot;
import java.util.*;

public class MouseMovement {
    int[] start = new int[2];
    int[] finish = new int[2];
    int dx;
    int dy;
    
    public void setStart(){
        Point point = MouseInfo.getPointerInfo().getLocation();
        start[0] = point.x;
        start[1] = point.y;
    }
    
    public void findDifferences(){
        dx = finish[0] - start[0];
        dy = finish[1] - start[1]; 
    }
    
    public int toBeReduced(){
        Random rand = new Random();  //return 0 means dx, return 1 means dy
        if(Math.abs(dx) > Math.abs(dy)){
            if(rand.nextInt(5) == 1){
                return 1;
            }
            else{
                return 0;
            }
        }
        else{
            if(rand.nextInt(5) == 1){
                return 0;
            }
            else{
                return 1;
            }
        }
    }
    
    public void reduction(Robot robot, int[] finish){        //call this method from main - this handles mousemovement
        this.finish = finish;
        setStart();
        findDifferences();
        
        while(dx != 0 || dy != 0){
            if(toBeReduced() == 0){ 
                if(dx > 0){
                    dx -= 1;
                }
                else{
                    dx += 1;
                }
            }
            else{
                if(dy > 0){
                    dy -= 1;
                }
                else{
                    dy += 1;
                }
            }
            robot.mouseMove(finish[0] - dx, finish[1] - dy);
        }
    }
    
    public static void main(String[] args) throws AWTException{
        Robot robot = new Robot();
        MouseMovement mouse = new MouseMovement();
        int[] finish = {0,0};
        mouse.reduction(robot, finish);
    }
}


/*
find dx and dy between start and finish points
At random reduce dx and dy by one until they are both 0
higher chance of reducing whichever is larger, dx or dy
*/
